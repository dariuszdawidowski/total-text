class TotalText{constructor(e){const{container:t=null,value:n=null,spellcheck:i=null,onChange:o=null}=e;this.onChange=o,this.element=document.createElement("div"),this.element.classList.add("total-text"),this.editor=document.createElement("div"),this.editor.classList.add("editor"),n&&this.set(n),this.editor.setAttribute("contenteditable",!0),this.editor.setAttribute("spellcheck",i?"true":"false"),this.editor.setAttribute("autocomplete","off"),this.element.append(this.editor),t&&t.append(this.element)}set(e){this.editor.innerHTML=e}get(){return this.editor.innerHTML}clear(){this.editor.innerHTML=""}edit(e){e?(this.editor.classList.add("editing"),this.editor.setAttribute("contenteditable",!0)):(this.editor.setAttribute("contenteditable",!1),this.editor.classList.remove("editing"),this.onChange&&this.onChange(this.get()))}spellcheck(e){this.editor.setAttribute("spellcheck",e?"true":"false")}getCaretPosition(e=this.editor){const t={position:0,element:null},n=e.ownerDocument||e.document,i=n.defaultView||n.parentWindow;var o;if(void 0!==i.getSelection){if((o=i.getSelection()).rangeCount>0){const n=i.getSelection().getRangeAt(0),o=n.cloneRange();o.selectNodeContents(e),o.setEnd(n.endContainer,n.endOffset),t.position=o.toString().length,t.element=n.endContainer.parentElement}}else if((o=n.selection)&&"Control"!=o.type){const i=o.createRange(),s=n.body.createTextRange();s.moveToElementText(e),s.setEndPoint("EndToEnd",i),t.position=s.text.length,t.element=i.parentElement()}return t}}